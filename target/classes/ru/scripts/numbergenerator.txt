context - generating a number of insurance policy with different masks
Mask depend on product 

config of number generator and current state must be saved in database
columns
    id SERIAL PRIMARY KEY,
    product_code VARCHAR(100) NOT NULL,
    mask VARCHAR(255) NOT NULL,           -- например "YYPPPXXXX"
    reset_policy VARCHAR(20) NOT NULL,    -- YEARLY | MONTHLY | NEVER
    max_value INT NOT NULL DEFAULT 999999
    last_reset DATE NOT NULL DEFAULT CURRENT_DATE,
    current_value INT NOT NULL DEFAULT 0,

create service with methods
getNextXXX(generator_id) this method must be transactional and optimized for parallel database update
first step - select record by id, if not found then raise exception.
then check reset_policy, if reset_policy = YEARLY then compare year from last_reset and now
if reset_policy = MONTHLY then compare month from last_reset and now and etc.
if they are not equals then set reset_policy = now and current_value = 0;

increment current value with 1
if current value greate that max_value then set it to 1

update database
return entity

method getNumber(map(string,string),config_id)
first - get entity from method getNextXXX
then split mask from entity by same chars and use them as a key for geting value from map
replace key in mask with value
char X means that this is generated number
calculate amount of X and format number for this length
return number

add methods for inserting record to database, updating and deleting

add POST method /policy/nextnumber/{ID} to TestControler


