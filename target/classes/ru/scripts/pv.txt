context - product version

data present as json -
{
  "product":
    {
      "id": 1202,
      "lob": "NS",
      "code": "NS-SRAVNIRU",
      "name": "НС Сравниру",
      "versionNo": 0,
      "versionStatus": "DEV",
	},
  "waitingPeriod": "P0D",
  "policyTerm": "P1Y",
  "issueDate" : "01-01-2026",
  "issueTimeZone": "3",
  "startDate" : "12-12-2005",
  "endDate" : "12-12-2026",
  "premium" : "2000.00",

  "errors": [
    {
      "keyLeft": "insAmount",
      "errorText": "Ошибка в страховой сумме"
    }
  ],

  "attributes": [
    {
	  "key": "",
      "path": "",
	  "value": ""
    }
  ],
  
  "bundles": [
    {
      "code": "Basic",
      "name": "Простой",
	  "premium": "0",
      "covers": [
        {
          "code": "PD",
		  "existsInRequest": false, - есть в запросе 
          "isMandatory": true,
          "waitingPeriod": "P0D",
          "coverageTerm": "P1Y",
			"startDate" : "",
			"endDate": "",
			"insAmount": "",
			"premium": "",
          "isDeductibleMandatory": false,
          "deductibles": [
            {
              "nr": 1,
              "deductibleType": "UNCONDITIONAL",
              "deductible": 100,
              "deductibleUnit": "SUM",
              "deductibleSpecific": "EVERY"
            }
          ]
        }
      ]
    }
  ]
}

create a dto from json in package ru.pt.domain.pv
base class is innerPolicy

create servise PolicyUtils
method innerPolicy getPolicy(String requestBody)
take a policy.code from reusetBodu by jsonpath
take a policy from repository by product.code
take a lob from repository by policy.lob
take a productVersion from productVersion repository by product.code and product.versionNo
create new innerPolicy
set product with data from productVersion
set   "waitingPeriod",  "policyTerm" with data from productVersion
set "issueDate" , "issueTimeZone", "startDate" ,  "endDate" with data from requestBody

errors is empty array
attributes is empty array

take "mpVars": [
    {
      "varCode": "InsAmount",
      "varType": "IN",
      "varPath": "string"
    }} from lob
in loop if varType = 'IN' then take value by jsonpath from varPath
add object to attributes with varCode, varPath and value
if varType != 'IN' then add object  to attributes with varCode, varPath and ""


set bundles, covers, deductibles with data from policyVersion

return innerPolicy

add method to TestController 
post /test/policy/inner 
call method policyUtils.innerPolicy(body)



